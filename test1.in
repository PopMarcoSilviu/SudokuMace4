assign(domain_size,33). 
assign(max_models,10).
assign(max_seconds, 60).
set(arithmetic).


formulas(latin_square).
	all x  all y1 all y2 (x<9 & y1 <9 & y2<9 -> (f(x,y1) = f(x,y2) -> y1 = y2)).
	all x1 all x2 all y (x1<9 & x2 <9 & y <9 -> (f(x1,y) = f(x2,y) -> x1 = x2)).	
	
end_of_list.

formulas(sudoku).
	all x all y (x<9 & y<9 ->(f(x,y) < 9 )).
	all x all y (x<9 & y<9 ->(color(x,y) < 9 )).
	all x all y (x>=9 | y>=9  -> f(x,y) = 0).
	all x all y (x>=9 | y>=9  -> color(x,y) = 0).		
	SIZE = 3.
	all x1 all y1 all x2 all y2 ((x1<9 & x2<9 & y1<9 & y2<9) -> ( color(x1,y1) = color(x2,y2) <-> (x1/SIZE = x2/SIZE) & (y1 /SIZE = y2 /SIZE))).     
 	all x1 all y1 all x2 all y2 ((x1<=8 & x2<=8 & y1<=8 & y2<=8 &  (x1!=x2| y1!=y2) & color(x1,y1) = color(x2,y2)  ) -> ( (f(x1,y1) != f(x2, 	y2 )  ) )).    

end_of_list.

formulas(color).
	color(0,0) = 0.
	color(0,3) = 1.
	color(0,6) = 2.
	color(3,0) = 3.
	color(3,3) = 4.
	color(3,6) = 5.
	color(6,0) = 6.
	color(6,3) = 7.
	color(6,6) = 8.


end_of_list.

formulas(starting_values).

	f(1,7) = 5.	
	f(2,2) = 2.
	f(4,0) = 3.
	f(4,2) = 8.
	f(4,8) = 1.
	f(5,2) = 4.
	f(5,4) = 6.
	f(5,7) = 3.
	f(7,0) = 2.
	f(7,1) = 7.
	f(7,6) = 0.

end_of_list.


formulas(cages).
	
	f(0,5) = 0 | f(0,5) = 3 | f(0,5) = 8.
	f(5,4) + f(6,4) + f(7,4) + f(8,4) = 0 | f(5,4) + f(6,4) + f(7,4) + f(8,4) = 5 | f(5,4) + f(6,4) + f(7,4) + f(8,4) = 12 | f(5,4) + f(6,4) + f(7,4) + f(8,4) = 32 | f(5,4) + f(6,4) + f(7,4) + f(8,4) = 21.
	
end_of_list.

formulas(special_rules).
	all x1 all y1 all x2 all y2 (((x1<9 & x2<9 & y1<9 & y2<9  & (abs(x1 + -x2) = 1 ) & (abs(y1 + -y2) = 1)) -> (f(x1,y1) = 0 -> f(x2,y2) != 5 && f(x2,y2) != 7 ) && ( f(x1,y1)= 2 -> f(x2,y2) != 5 ) && (f(x1,y1) = 1 -> f(x2,y2) != 4) && (f(x1,y1) = 3 -> f(x2,y2) != 8 && f(x2,y2)!=5 ) && (f(x1,y1) = 4 -> f(x2,y2) !=1) && (f(x1,y1) = 5 -> f(x2,y2) != 2 & f(x2,y2) != 3) && (f(x1,y1) = 7 -> f(x2,y2)!= 0   ) .

end_of_list.


